// Multiplication by squared addition with optimal evaluation

// Repeated Application
@rep(n f x) = ~ n {
  #0: x
  #_: λnp !&0{f0 f1}=f (f0 @rep(np f1 x))
}

// Squared Application
@sqr(n f x) = ~ n {
  #0: x
  #_: λp
    !&0{p0 p1}=(+ p 1)
    !&0{fA f0}=f
    !&0{f1 f2}=fA
    @sqr((/ p0 2) λk(f0 (f1 k)) @rep((% p1 2) f2 x))
}

// Bits (Scott)
@o(x) = λo λi λe (o x)
@i(x) = λo λi λe (i x)
@e    = λo λi λe e

// Creates an all-zero Bits
@zero(s) = ~s{
  #0: @e
  #_: λp @o(@zero(p))
}

// U32 -> Bits
@bits(n) = ~ n {
  #0: @e
  #_: λp !&0{n0 n1}=(+ p 1) ~ (% n0 2) {
    #0: @o(@bits((/ n1 2)))
    #1: @i(@bits((/ n1 2)))
    #_: *
  }
}

// Bits -> U32
@u32(xs) = (xs
  λp0 (+ (* 2 @u32(p0)) 0)
  λp1 (+ (* 2 @u32(p1)) 1)
  0)

// Bits increment
@inc(x) = λo λi λe (x i λop(o @inc(op)) e)

// Addition with carry
@add = λa λb λo λi λe (a
  λap0 (b λbp0 (o (@add ap0 bp0)) λbp1 (i      (@add ap0 bp1))  e)
  λap1 (b λbp2 (i (@add ap1 bp2)) λbp3 (o @inc((@add ap1 bp3))) e)
  (b o i e))

// Multiplication by squared addition
@mul(a b) = @u32(@sqr(a (@add @bits(b)) @zero(64)))

@main = @mul(1234567 1234567)

//WORK: 233357193 interactions
//TIME: 3.202 seconds
//SIZE: 1402714952 nodes
//PERF: 72.890 MIPS
